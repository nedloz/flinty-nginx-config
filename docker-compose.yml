services:

  server-svc:
    build:
      context: ./server-svc
      dockerfile: dockerfile
    ports:
      - "4000:4000"
    volumes:
      - ./server-svc:/app
      - /app/node_modules
    env_file:
      - ./server-svc/.env
    depends_on:
      - mongo
    restart: unless-stopped
    networks:
      - app-network

  nginx:
    build:
      context: ./nginx
      dockerfile: dockerfile
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
    depends_on:
      - user-auth-svc
      - server-svc
    networks:
      - app-network

  user-auth-svc:
    build:
      context: ./user-auth-svc
      dockerfile: dockerfile
    ports: 
      - "3000:3000"
    volumes:
      - ./user-auth-svc:/app
      - /app/node_modules
    env_file:
      - ./user-auth-svc/.env
    depends_on:
      - mongo
      - redis
    restart: unless-stopped
    networks:
      - app-network
    

  mongo: 
    image: mongo:6
    container_name: mongo
    ports:
      - "27017:27017"
    restart: unless-stopped
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network
  
  redis: 
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - app-network

volumes:
  mongo_data:
  redis_data:


networks:
  app-network:



